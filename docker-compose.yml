services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_USER: ${DB_USER}  
      DB_PASSWORD: ${DB_PASSWORD}  
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}  
      POSTGRES_PASSWORD: ${DB_PASSWORD}  
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
  
  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable", "up" ]
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
